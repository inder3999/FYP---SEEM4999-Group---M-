# In order to run this, kindly first download the file ProbDef.txt from the repository and save it in the same location (folder) as you saved Platypus. For e.g. in C:\Users\'your account name'

from platypus import *
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import ProbDef

# ProbDef is the module which contains the problem definition for the 25 variables case 

if __name__ == "__main__":
 problem = ProbDef.Belegundu()
 algorithms = [NSGAII, (NSGAIII, {"divisions_outer":12}), (MOEAD, {"weight_generator":normal_boundary_weights, "divisions_outer":12}), (EpsMOEA, {"epsilons":[0.05]})] 
 # run the experiment using Python 3's concurrent futures for parallel evaluation
 with ProcessPoolEvaluator() as evaluator:
  results = experiment(algorithms, problem, seeds=1, nfe=10000, evaluator=evaluator)
# display the results
 fig = plt.figure()
 for i, algorithm in enumerate(six.iterkeys(results)):
  result = results[algorithm]["Belegundu"][0]
  ax = fig.add_subplot(2, 5, i+1, projection='3d')
  ax.scatter([s.objectives[0] for s in result], [s.objectives[1] for s in result], [s.objectives[2] for s in result])
  ax.set_title(algorithm)
  ax.set_xlabel(“$Cost$”) 
  ax.set_ylabel(“$Distance$”)
  ax.set_zlabel(“$Calories$”)
  ax.set_xlim([15, 50])
  ax.set_ylim([20, 70])
  ax.set_zlim([45, 80])
  ax.view_init(elev=30.0, azim=15.0)
  ax.locator_params(nbins=4)
 plt.show()

